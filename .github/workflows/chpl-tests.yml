name: chpl tests
on:
  workflow_call:
    inputs:
      chapel_version:
        description: 'Chapel version to use (latest, nightly, or a specific version)'
        required: true
        type: string
      run_optional_tests:
        description: 'Whether to run additional tests (Python)'
        required: false
        type: boolean
        default: true

jobs:
  # brew only supports nightly and latest
  # brew doesn't support linux arm
  # TODO: brew will soon support ML chapel, so we can add comm!=none jobs for brew then
  mason-test-brew:
    if: ${{ inputs.chapel_version == 'nightly' || inputs.chapel_version == 'latest' }}
    strategy:
      fail-fast: false
      matrix:
        backend: [llvm, gnu, clang]
        os: [ubuntu-latest, macos-latest]
        exclude:
          - os: ubuntu-latest
            backend: clang
          - os: macos-latest
            backend: gnu
    runs-on: ${{ matrix.os }}
    env:
      CHPL_TARGET_COMPILER: ${{ matrix.backend }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Homebrew
        uses: Homebrew/actions/setup-homebrew@main
      - name: Install Chapel
        run: |
          if [ "${{ inputs.chapel_version }}" = "nightly" ]; then
            brew install --HEAD chapel
          else
            brew install chapel
          fi
      - name: Build CVL Dependencies
        run: |
          ./third-party/sleef/install.sh
      - name: Run Tests
        run: |
          ./util/test.sh

  mason-test-docker:
    strategy:
      fail-fast: false
      matrix:
        image:
          - chapel/chapel:${{ inputs.chapel_version }}
          - chapel/chapel-gasnet:${{ inputs.chapel_version }}
          - chapel/chapel-gasnet-smp:${{ inputs.chapel_version }}
        backend: [llvm, gnu]
        os: [ubuntu-latest, ubuntu-24.04-arm]
    runs-on: ${{ matrix.os }}
    container:
      image: ${{ matrix.image }}
    env:
      CHPL_TARGET_COMPILER: ${{ matrix.backend }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up CMake
        # cmake testing doesn't work on arm yet
        if: ${{ matrix.os != 'ubuntu-24.04-arm' }}
        uses: jwlawson/actions-setup-cmake@v2.0.2
      - name: Build CVL Dependencies
        run: |
          ./third-party/sleef/install.sh
      - name: Limit Locales For SMP
        if: ${{ matrix.image == format('chapel/chapel-gasnet-smp:{0}', inputs.chapel_version) }}
        run: |
          echo 'MAX_LOCALES=2' >> $GITHUB_ENV
      - name: Run Tests
        run: |
          ./util/test.sh
      - name: Run CMake Tests
        # cmake testing doesn't work on arm yet
        if: ${{ matrix.os != 'ubuntu-24.04-arm' }}
        run: |
          ./util/testCMake.sh
      - name: Run examples
        run: |
          ./util/examples.sh

  # this just runs the benchmarks to make sure they compile and run
  test-benchmarks:
    strategy:
      fail-fast: true
      matrix:
        runs-on: [ubuntu-latest, ubuntu-24.04-arm]
    runs-on: ${{ matrix.runs-on }}
    container:
      image: chapel/chapel:${{ inputs.chapel_version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Python Dependencies
        run: |
          python3 -m venv .venv
          ./.venv/bin/python3 -m pip install --upgrade pip
          ./.venv/bin/python3 -m pip install pydantic
      - name: Setup fortran
        # fortran-lang/setup-fortran has some bugs when running in a container
        # and bad usage of sudo, so use jabraham17/setup-fortran@fix-cd until
        # those are fixed
        uses: jabraham17/setup-fortran@fix-cd
        with:
          compiler: gcc
          version: latest
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
      - name: Build CVL Dependencies
        run: |
          ./third-party/sleef/install.sh
      - name: Run Benchmarks
        run: |
          ./.venv/bin/python3 ./util/bench.py \
            --schema benchmarks/benchmarks.json \
            --trials 3 \
            --cvl-options "$(./compile.py --sleef)"

  lint:
    runs-on: ubuntu-latest
    container:
      image: chapel/chapel:${{ inputs.chapel_version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Run lints
        run: |
          ./util/lint.sh

  python-tests:
    if: ${{ inputs.run_optional_tests }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install tox
      - name: Run Python Tests
        run: |
          ./util/tox.sh
